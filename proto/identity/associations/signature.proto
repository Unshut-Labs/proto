syntax = "proto3";

package xmtp.identity.associations;

option go_package = "github.com/xmtp/proto/v3/go/identity/associations";
option java_package = "org.xmtp.proto.identity.associations";

// RecoverableEcdsaSignature for EIP-191 and V2 signatures
message RecoverableEcdsaSignature {
  // 65-bytes [ R || S || V ], with recovery id as the last byte
  bytes bytes = 1;
}

// EdDSA signature for 25519
message RecoverableEd25519Signature {
  bytes bytes = 1;
}

message Erc1271Signature {
  // CAIP-10 contract address
  // https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md
  string contract_address = 1;
  // Specify the block height to verify the signature against
  int64 block_height = 2;
  // The actual signature bytes
  bytes signature = 3;
}

message Signature {
  // Must have two properties:
  // 1. An identifier for the signer must either be recoverable, or specified as
  //    a field
  // 2. The signer certifies that the signing payload is correct. The payload
  //    must be inferred from the context in which the signature is provided.
  oneof signature {
    RecoverableEcdsaSignature erc_191 = 1;
    Erc1271Signature erc_1271 = 2;
    RecoverableEd25519Signature installation_key = 3;
    RecoverableEcdsaSignature legacy_key = 4;
  }
}
