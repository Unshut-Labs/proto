syntax = "proto3";

package xmtp.identity.associations;

import "identity/associations/signature.proto";

option go_package = "github.com/xmtp/proto/v3/go/identity/associations";
option java_package = "org.xmtp.proto.identity.associations";

// The first entry of any XID log, which is considered valid iff the XID can be
// deterministically derived from the address and nonce.
// The recovery address defaults to the initial_associated_address unless
// there is a subsequent ChangeRecoveryAddress in the log.
message CreateXid {
  uint32 nonce = 1;
  string initial_associated_address = 2;
}

message AddAssociation {
  enum AssociatedRole {
    ASSOCIATED_ROLE_UNSPECIFIED = 0;
    ASSOCIATED_ROLE_INSTALLATION = 1;
    ASSOCIATED_ROLE_ADDRESS = 2;
    ASSOCIATED_ROLE_LEGACY_KEY = 4;
  }

  uint32 nonce = 1;
  AssociationSignature existing_member_signature = 2;
  AssociationSignature new_member_signature = 3;
  // Clients must validate that the AssociationSignature for the new_member
  // is appropriate for this entity_type
  AssociatedRole new_member_role = 4;
  // These next two fields aren't strictly necessary, since they should be able to
  // be derived from the signatures
  // Either account address, V2 public key, or installation_id
  // The ID of the existing member
  string existing_member_id = 5;
  // THe ID of the new member
  string new_member_id = 6;
}

// An entity may have been associated with multiple roles. Clients MUST remove
// the entity from all previously associated roles.
message RevokeAssociation {
  uint32 nonce = 1;
  AssociationSignature recovery_address_signature = 2;
  string xid = 3;
  // The nonce of the association being removed.
  // This nonce must never be used again for this XID
  // Either an installation public key or a wallet address
  string revoked_entity_id = 4;
  // Allow the revoker to include a list of downstream associations that should
  // be retained even after the revocation. Any association not in this list
  // will be removed
  repeated string retained_associations = 5;
}

message ChangeRecoveryAddress {
  uint32 nonce = 1;
  AssociationSignature recovery_address_signature = 2;
  string new_recovery_address = 3;
}

message XidLogEntry {
  uint64 timestamp_ns = 1;
  oneof kind {
    CreateXid create = 2;
    AddAssociation add = 3;
    RevokeAssociation revoke = 4;
    ChangeRecoveryAddress change_recovery_address = 5;
  }
}

// Used to resolve the XID for a given address. The last entry in the log
// is considered to be the active XID, provided that the referenced XID log
// validates successfully.
message AddressLogEntry {
  uint64 timestamp_ns = 1;
  AddAssociation add = 2;
}
