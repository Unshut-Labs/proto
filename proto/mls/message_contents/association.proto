// Associations and signatures
syntax = "proto3";

package xmtp.mls.message_contents;

import "message_contents/public_key.proto";

option go_package = "github.com/xmtp/proto/v3/go/mls/message_contents";
option java_package = "org.xmtp.proto.mls.message.contents";

// Allows for us to update the format of the association text without
// incrementing the entire proto
enum AssociationTextVersion {
  ASSOCIATION_TEXT_VERSION_UNSPECIFIED = 0;
  ASSOCIATION_TEXT_VERSION_1 = 1;
}

// EIP191Association is used for all EIP 191 compliant wallet signatures
message Eip191Association {
  AssociationTextVersion association_text_version = 1;
  RecoverableEcdsaSignature signature = 2;
  string account_address = 3;
  string iso8601_time = 4;
}

// LegacyCreateIdentityAssociation is used when a v3 installation key
// is signed by a v2 identity key, which in turn is signed via a
// 'CreateIdentity' wallet signature
message LegacyCreateIdentityAssociation {
  RecoverableEcdsaSignature signature = 1;  // SHA-256 hash of installation key
  xmtp.message_contents.SignedPublicKey signed_legacy_create_identity_key = 2;
}

// RecoverableEcdsaSignature
message RecoverableEcdsaSignature {
  // Includes recovery id as the last byte
  bytes bytes = 1;
}

// EdDSA signature bytes matching RFC 8032
message EdDsaSignature {
  bytes bytes = 1;
}
